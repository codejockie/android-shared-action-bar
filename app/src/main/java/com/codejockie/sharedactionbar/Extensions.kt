package com.codejockie.sharedactionbar

import android.os.Build
import androidx.annotation.PluralsRes
import androidx.annotation.RequiresApi
import androidx.compose.runtime.Composable
import androidx.compose.ui.platform.LocalContext
import java.text.NumberFormat
import java.time.LocalDateTime
import java.time.format.DateTimeFormatter
import java.time.format.FormatStyle

/**
 * Returns the string necessary for grammatically correct pluralization
 * of the given resource ID for the given quantity.
 * Note that the string is selected based solely on grammatical necessity,
 * and that such rules differ between languages. Do not assume you know which string
 * will be returned for a given quantity. See
 * <a href="{@docRoot}guide/topics/resources/string-resource.html#Plurals">String Resources</a>
 * for more detail.
 *
 * @param id The desired resource identifier, as generated by the aapt
 *           tool. This integer encodes the package, type, and resource
 *           entry. The value 0 is an invalid identifier.
 * @param quantity The number used to get the correct string for the current language's
 *           plural rules.
 *
 * @return String The string data associated with the resource,
 * stripped of styled text information.
 *
 * Example:
 * Text(text = quantityStringResource(R.plurals.heading_transaction, transactions.size))
 */
@Composable
fun quantityStringResource(@PluralsRes id: Int, quantity: Int): String {
    return LocalContext.current.resources.getQuantityString(id, quantity)
}

@Composable
fun quantityStringResource(@PluralsRes id: Int, quantity: Int, vararg formatArgs: Any): String {
    return LocalContext.current.resources.getQuantityString(id, quantity, formatArgs)
}

fun Number.format(): String {
    return NumberFormat.getInstance().format(this)
}

fun Number.currencyFormat(): String {
    return NumberFormat.getCurrencyInstance().format(this)
}

/*
val transactionDate: LocalDate = LocalDate.ofEpochDay(transaction.dateAdded/86400000L) //86400000L represents number of seconds in a day.
val formattedTransactionDate: String = transactionDate.format(dateFormatter)
 */

@RequiresApi(Build.VERSION_CODES.O)
fun LocalDateTime.toLocalizedDate(dateStyle: FormatStyle): String {
    val dateFormatter: DateTimeFormatter =
        DateTimeFormatter.ofLocalizedDate(dateStyle) // Alternatively use FormatStyle.LONG, FULL, MEDIUM for detailed dates
    return this.format(dateFormatter)
}